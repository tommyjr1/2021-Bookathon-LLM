컴퓨터와 관련된 직업을 갖고 싶었던 저는 예전부터 컴퓨터에 관심이 많았습니다. 프로그래밍, 알고리즘도 공부해 본 적이 있었고, 컴퓨터 자격증도 취득해 본 적이 있었고, 컴퓨터 관련 상도 타 본 적이 있었고, 컴퓨터로 일을 처리해 본 적도 많았습니다. 그러던 어느 날, 저는 고등학생 때 컴퓨터와 관련된 책을 읽고 싶었습니다. 그래서 저는 학교생활기록부에도 올릴 겸 컴퓨터에 관한 지식을 쌓기 위해 이 책을 사서 읽었습니다. 이 책은 저에게 프로그래밍이 무엇인지 가르쳐 주었고, 프로그래밍으로 성공한 사람들의 전기를 보여주었고, 컴퓨터의 이야기를 들려주었고, 프로그래밍을 어떻게 공부하는지 가르쳐 주었습니다. 그리고 저는 대학교에 입학하고 나서, 제 전공에 대하여 다시 한번 자세히 알아보기 위하여 이 책을 다시 읽게 되었습니다. 그리고 저는 이제 이 독후감을 씁니다. 제1장은 프로그래밍을 어떻게 공부하는지에 대하여 설명하고 있습니다. 이 책은 동의할 수 없는 권위에 굴복하지 않고, 연습을 꾸준히 함으로써 슬럼프를 극복하여 프로그래밍의 전문가가 될 수 있다고 설명하고 있습니다. 그리고 일을 바라보는 관점을 변화시킴으로써 행복해질 수 있다고 설명하고 있습니다. 그리고 개인적으로 자신 있는 분야를 깊게 파는 것도 중요하다고 설명하고 있습니다. 저는 제1장을 읽고 앞으로 제1장에서 소개하는 공부법을 실천해야겠다는 다짐을 하였습니다. 제2장은 의도적 수련과 소프트웨어 장인정신이 무엇인지 설명하고 있습니다. 이 책에서의 의도적 수련은 먼저 목표를 수립하고, 기민하게 학습하는 습관을 들이고, 지식 인출 작업을 정기적으로 수행하는 것입니다. 그리고 자신이 어떤 사람인지 되돌아보는 시간, 즉 자아 성찰을 진행하는 시간도 필요합니다. 그리고 소프트웨어 장인이 되기 위해, 최신 정보를 유지하기 위하여 노력하고, 의도적으로 수련하고, 사회적 자본을 활용하고, 자기 자신을 꾸준히 관리하고, 가치를 지키고 원칙을 고수해야 한다고 이 책은 설명하고 있습니다. 저는 제2장을 읽고 의도적 수련이 무엇인지 알 수 있었고, 소프트웨어 장인이 되기 위해 제가 해야 할 일이 무엇인지 알게 되었습니다. 그리고 저는 앞으로 그 일을 꾸준히 할 것이라고 다짐하였습니다. 제3장은 컴퓨터와 사람들과 서로 소통하는 이야기를 담고 있습니다. 사람들은 컴퓨터와 소통하기 위해 코딩을 하며, 편지 혹은 일기를 작성하듯 코드를 작성하는 사람들도 많으며, 코딩에는 운문식 코딩과 산문식 코딩이 존재합니다. 그리고 이 책은 코딩의 왕도가 되기 위해 다독, 다작을 실천해야 한다고 설명하고 있습니다. 저는 제4장을 읽고, 저도 책에서 소개한 프로그래머처럼 코딩 자체를 즐기면서 할 것이며, 코드를 많이 읽고, 코딩에 대해 좀 더 많이 공부해야겠다는 생각이 들었습니다. 제4장은 프로그래밍을 교양으로써 공부하는 방법을 설명하고 있습니다. 이 책은, 현대 사회는 프로그래밍이 필수 교양으로 취급받는다고 말하고 있습니다. 그리고 프로그래밍을 교양으로써 공부하려면 먼저 시나리오로 시작하고, 프로그램 설계에 공을 들이고, 에러 코드를 분석하고, 컴퓨터 하드웨어의 구조를 익히고, 문법과 외부 라이브러리와 API 활용법을 적극적으로 배우고, 좋은 도구를 사용해야 한다고 말하고 있습니다. 저는 제4장을 읽고 저도 프로그래밍이 현대 사회에서 필수 교양으로 취급받아야 한다고 생각하게 되었습니다. 그리고 프로그래밍을 공부하는 방법을 제1장에 비해 더 정확하게 배울 수 있어서 좋았고, 앞으로 그러한 공부방법을 꾸준히 실천해야겠다는 생각을 하였습니다. 저는 컴퓨터공학 전공자들뿐만 아니라, 비전공자들에게도 이 책을 강력히 추천하고 싶습니다. 이 책을 읽음으로써 저는 프로그래밍을 공부하는 방법을 정확히 알 수 있고, 소프트웨어 장인이 되기 위해 어떤 정신을 가져야 하는지 알 수 있고, 컴퓨터와 관련된 이야기를 많이 알 수 있다고 생각합니다. 지금까지 제 독후감을 읽어주셔서 감사합니다.